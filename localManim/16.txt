

DrawBorderThenFill¶
Qualified name: \`\`\`manim.animation.creation.DrawBorderThenFill\`\`\`


\`\`\`class\`\`\` \`\`\`DrawBorderThenFill\`\`\`(\`\`\`mobject\`\`\`\`\`\`=\`\`\`\`\`\`None\`\`\`, \`\`\`*\`\`\`\`\`\`args\`\`\`, \`\`\`use_override\`\`\`\`\`\`=\`\`\`\`\`\`True\`\`\`, \`\`\`**\`\`\`\`\`\`kwargs\`\`\`)¶
Bases: \`\`\`Animation\`\`\`
Draw the border first and then show the fill.
Examples

Example: ShowDrawBorderThenFill ¶
\`\`\`from manim import *

class ShowDrawBorderThenFill(Scene):
    def construct(self):
        self.play(DrawBorderThenFill(Square(fill_opacity=1, fill_color=ORANGE)))\`\`\`


Methods



\`\`\`begin\`\`\`
Begin the animation.

\`\`\`get_all_mobjects\`\`\`
Get all mobjects involved in the animation.

\`\`\`get_outline\`\`\`


\`\`\`get_stroke_color\`\`\`


\`\`\`interpolate_submobject\`\`\`






Parameters:

vmobject (VMobject | OpenGLVMobject)
run_time (float)
rate_func (Callable[[float], float])
stroke_width (float)
stroke_color (str)
draw_border_animation_config (dict)
fill_animation_config (dict)
introducer (bool)





\`\`\`begin\`\`\`()¶
Begin the animation.
This method is called right as an animation is being played. As much
initialization as possible, especially any mobject copying, should live in this
method.

Return type:
None





\`\`\`get_all_mobjects\`\`\`()¶
Get all mobjects involved in the animation.
Ordering must match the ordering of arguments to interpolate_submobject

Returns:
The sequence of mobjects.

Return type:
Sequence[Mobject]





